{"version":3,"sources":["data/DetaResponse.ts","components/Content.tsx","components/SpreadsheetInfo.tsx","components/icons.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Size","D","cols","rows","Response","id","name","lastModified","columnNames","size","DisplayContents","data","map","colName","idx","Column","prop","label","DisplayError","err","h2","type","block","JSON","stringify","Content","useFetch","formatter","response","a","json","decoded","decode","console","log","isLoading","error","h1","status","statusText","undefined","_tag","right","left","SpreadsheetInfo","Container","xs","justify","h4","style","textAlign","href","ReactIcon","viewBox","width","height","xmlns","margin","fill","cx","cy","r","d","TSIcon","GithubIcon","fillRule","clipRule","Footer","gap","small","underline","color","w","App","Header","center","h","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f4cde9d.chunk.js","sourcesContent":["import * as D from 'io-ts/Decoder'\n\nconst Size = D.struct({\n    cols: D.number,\n    rows: D.number\n})\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\ntype Size = D.TypeOf<typeof Size>\n\n\nexport const Response = D.struct({\n    id: D.string, // The ID of the spreadsheet\n    name: D.string, // title of the Google Spreadsheet\n    lastModified: D.number,\n    columnNames: D.array(D.string),\n    size: Size,\n    rows: D.array(D.record(D.string)) // Record<string, string>[]\n})\n\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type Response = D.TypeOf<typeof Response>","import React from 'react'\nimport useFetch from 'react-fetch-hook'\nimport { Response } from '../data/DetaResponse'\nimport { Text, Table, Loading, Code, Note } from '@geist-ui/react'\nimport { DecodeError } from 'io-ts/lib/Decoder'\n\n\nconst Content: React.FC = () => {\n    const { isLoading, data, error } = useFetch('https://q77r6a.deta.dev/sheet/1MT2XUN_cMJA-tHjlxt7j_P6RwOZ9j08WIppq6BosKMo?formatRows=true', {\n        formatter: async (response) => {\n            const json = await response.json()\n            const decoded = Response.decode(json)\n            console.log(decoded)\n            return decoded\n        }\n    })\n\n    if (error) {\n        return <>\n            <Text h1 type='error'>HTTP Error!</Text>\n            <Text>Code: {error.status}</Text>\n            <Text>Message: {error.statusText}</Text>\n            <Text>Dump: {JSON.stringify(error, undefined, 4)}</Text>\n        </>\n    }\n\n    if (isLoading) {\n        return <>\n            <Loading>Loading Data</Loading>\n        </>\n    }\n\n\n    if (data) {\n        switch (data._tag) {\n            case 'Right':\n                return <DisplayContents data={data.right} />\n            case 'Left':\n                return <DisplayError err={data.left} />\n        }\n    }\n\n\n    return <div>\n        <Text type='error'>This shouldn't happen!</Text>\n    </div>\n}\n\nconst DisplayContents: React.FC<{ data: Response }> = ({ data }) => (\n    <Table data={data.rows}>\n        {data.columnNames.map((colName, idx) => <Table.Column prop={colName} label={colName} key={idx} />)}\n    </Table>\n)\n\nconst DisplayError: React.FC<{ err: DecodeError }> = ({ err }) => (\n    <>\n        <Text h2 type='error'>Decoding Error!</Text>\n        <Note type='warning'>This usually happens when either an English cell or Chinese cell is empty</Note>\n        <Code block>{JSON.stringify(err, null, 4)}</Code>\n    </>\n)\n\n\nexport default Content;\n","import { Link, Text, Grid } from '@geist-ui/react';\n\ninterface Props { }\n\nconst SpreadsheetInfo: React.FC<Props> = () => (\n    <Grid.Container>\n        <Grid xs={24} justify='center'>\n            <Text h4 style={{ textAlign: 'center' }}>\n                Edit the spreadsheet in the link below to see live changes!\n            </Text>\n        </Grid>\n        <Grid xs={24} justify='center'>\n            <Link href=\"https://docs.google.com/spreadsheets/d/1MT2XUN_cMJA-tHjlxt7j_P6RwOZ9j08WIppq6BosKMo/edit?usp=sharing\" block>\n                Spreadsheet Link\n            </Link>\n        </Grid>\n    </Grid.Container>\n)\n\nexport default SpreadsheetInfo","import React from 'react';\n\ninterface Props {\n    size: number\n}\n\nconst ReactIcon: React.FC<Props> = ({ size }) => (\n    <a href={'https://reactjs.org/'} >\n        <svg viewBox=\"0 0 128 128\" width={size} height={size} xmlns=\"http://www.w3.org/2000/svg\" style={{ margin: 'auto' }}>\n            <g fill=\"#61DAFB\"><circle cx=\"64\" cy=\"64\" r=\"11.4\"></circle><path d=\"M107.3 45.2c-2.2-.8-4.5-1.6-6.9-2.3.6-2.4 1.1-4.8 1.5-7.1 2.1-13.2-.2-22.5-6.6-26.1-1.9-1.1-4-1.6-6.4-1.6-7 0-15.9 5.2-24.9 13.9-9-8.7-17.9-13.9-24.9-13.9-2.4 0-4.5.5-6.4 1.6-6.4 3.7-8.7 13-6.6 26.1.4 2.3.9 4.7 1.5 7.1-2.4.7-4.7 1.4-6.9 2.3-12.5 4.8-19.3 11.4-19.3 18.8s6.9 14 19.3 18.8c2.2.8 4.5 1.6 6.9 2.3-.6 2.4-1.1 4.8-1.5 7.1-2.1 13.2.2 22.5 6.6 26.1 1.9 1.1 4 1.6 6.4 1.6 7.1 0 16-5.2 24.9-13.9 9 8.7 17.9 13.9 24.9 13.9 2.4 0 4.5-.5 6.4-1.6 6.4-3.7 8.7-13 6.6-26.1-.4-2.3-.9-4.7-1.5-7.1 2.4-.7 4.7-1.4 6.9-2.3 12.5-4.8 19.3-11.4 19.3-18.8s-6.8-14-19.3-18.8zm-14.8-30.5c4.1 2.4 5.5 9.8 3.8 20.3-.3 2.1-.8 4.3-1.4 6.6-5.2-1.2-10.7-2-16.5-2.5-3.4-4.8-6.9-9.1-10.4-13 7.4-7.3 14.9-12.3 21-12.3 1.3 0 2.5.3 3.5.9zm-11.2 59.3c-1.8 3.2-3.9 6.4-6.1 9.6-3.7.3-7.4.4-11.2.4-3.9 0-7.6-.1-11.2-.4-2.2-3.2-4.2-6.4-6-9.6-1.9-3.3-3.7-6.7-5.3-10 1.6-3.3 3.4-6.7 5.3-10 1.8-3.2 3.9-6.4 6.1-9.6 3.7-.3 7.4-.4 11.2-.4 3.9 0 7.6.1 11.2.4 2.2 3.2 4.2 6.4 6 9.6 1.9 3.3 3.7 6.7 5.3 10-1.7 3.3-3.4 6.6-5.3 10zm8.3-3.3c1.5 3.5 2.7 6.9 3.8 10.3-3.4.8-7 1.4-10.8 1.9 1.2-1.9 2.5-3.9 3.6-6 1.2-2.1 2.3-4.2 3.4-6.2zm-25.6 27.1c-2.4-2.6-4.7-5.4-6.9-8.3 2.3.1 4.6.2 6.9.2 2.3 0 4.6-.1 6.9-.2-2.2 2.9-4.5 5.7-6.9 8.3zm-18.6-15c-3.8-.5-7.4-1.1-10.8-1.9 1.1-3.3 2.3-6.8 3.8-10.3 1.1 2 2.2 4.1 3.4 6.1 1.2 2.2 2.4 4.1 3.6 6.1zm-7-25.5c-1.5-3.5-2.7-6.9-3.8-10.3 3.4-.8 7-1.4 10.8-1.9-1.2 1.9-2.5 3.9-3.6 6-1.2 2.1-2.3 4.2-3.4 6.2zm25.6-27.1c2.4 2.6 4.7 5.4 6.9 8.3-2.3-.1-4.6-.2-6.9-.2-2.3 0-4.6.1-6.9.2 2.2-2.9 4.5-5.7 6.9-8.3zm22.2 21l-3.6-6c3.8.5 7.4 1.1 10.8 1.9-1.1 3.3-2.3 6.8-3.8 10.3-1.1-2.1-2.2-4.2-3.4-6.2zm-54.5-16.2c-1.7-10.5-.3-17.9 3.8-20.3 1-.6 2.2-.9 3.5-.9 6 0 13.5 4.9 21 12.3-3.5 3.8-7 8.2-10.4 13-5.8.5-11.3 1.4-16.5 2.5-.6-2.3-1-4.5-1.4-6.6zm-24.7 29c0-4.7 5.7-9.7 15.7-13.4 2-.8 4.2-1.5 6.4-2.1 1.6 5 3.6 10.3 6 15.6-2.4 5.3-4.5 10.5-6 15.5-13.8-4-22.1-10-22.1-15.6zm28.5 49.3c-4.1-2.4-5.5-9.8-3.8-20.3.3-2.1.8-4.3 1.4-6.6 5.2 1.2 10.7 2 16.5 2.5 3.4 4.8 6.9 9.1 10.4 13-7.4 7.3-14.9 12.3-21 12.3-1.3 0-2.5-.3-3.5-.9zm60.8-20.3c1.7 10.5.3 17.9-3.8 20.3-1 .6-2.2.9-3.5.9-6 0-13.5-4.9-21-12.3 3.5-3.8 7-8.2 10.4-13 5.8-.5 11.3-1.4 16.5-2.5.6 2.3 1 4.5 1.4 6.6zm9-15.6c-2 .8-4.2 1.5-6.4 2.1-1.6-5-3.6-10.3-6-15.6 2.4-5.3 4.5-10.5 6-15.5 13.8 4 22.1 10 22.1 15.6 0 4.7-5.8 9.7-15.7 13.4z\"></path></g>\n        </svg>\n    </a>\n\n)\n\nconst TSIcon: React.FC<Props> = ({ size }) => (\n    <a href={'https://www.typescriptlang.org/'} >\n        <svg viewBox=\"0 0 128 128\" width={size} height={size} xmlns=\"http://www.w3.org/2000/svg\" style={{ margin: 'auto' }}>\n            <path id=\"plain\" fill=\"#007acc\" d=\"M2,63.91v62.5H127V1.41H2Zm100.73-5a15.56,15.56,0,0,1,7.82,4.5,20.58,20.58,0,0,1,3,4c0,.16-5.4,3.81-8.69,5.85-.12.08-.6-.44-1.13-1.23a7.09,7.09,0,0,0-5.87-3.53c-3.79-.26-6.23,1.73-6.21,5a4.58,4.58,0,0,0,.54,2.34c.83,1.73,2.38,2.76,7.24,4.86,8.95,3.85,12.78,6.39,15.16,10,2.66,4,3.25,10.46,1.45,15.24-2,5.2-6.9,8.73-13.83,9.9a38.32,38.32,0,0,1-9.52-.1A23,23,0,0,1,80,109.19c-1.15-1.27-3.39-4.58-3.25-4.82a9.34,9.34,0,0,1,1.15-.73L82.5,101l3.59-2.08.75,1.11a16.78,16.78,0,0,0,4.74,4.54c4,2.1,9.46,1.81,12.16-.62a5.43,5.43,0,0,0,.69-6.92c-1-1.39-3-2.56-8.59-5-6.45-2.78-9.23-4.5-11.77-7.24a16.48,16.48,0,0,1-3.43-6.25,25,25,0,0,1-.22-8c1.33-6.23,6-10.58,12.82-11.87A31.66,31.66,0,0,1,102.73,58.93ZM73.39,64.15l0,5.12H57.16V115.5H45.65V69.26H29.38v-5a49.19,49.19,0,0,1,.14-5.16c.06-.08,10-.12,22-.1L73.33,59Z\"></path>\n        </svg>\n    </a>\n)\n\nconst GithubIcon: React.FC<Props> = ({ size }) => (\n    <svg viewBox=\"0 0 128 128\" width={size} height={size} xmlns=\"http://www.w3.org/2000/svg\" style={{ margin: 'auto' }}>\n        <g fill=\"#181616\"><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M64 5.103c-33.347 0-60.388 27.035-60.388 60.388 0 26.682 17.303 49.317 41.297 57.303 3.017.56 4.125-1.31 4.125-2.905 0-1.44-.056-6.197-.082-11.243-16.8 3.653-20.345-7.125-20.345-7.125-2.747-6.98-6.705-8.836-6.705-8.836-5.48-3.748.413-3.67.413-3.67 6.063.425 9.257 6.223 9.257 6.223 5.386 9.23 14.127 6.562 17.573 5.02.542-3.903 2.107-6.568 3.834-8.076-13.413-1.525-27.514-6.704-27.514-29.843 0-6.593 2.36-11.98 6.223-16.21-.628-1.52-2.695-7.662.584-15.98 0 0 5.07-1.623 16.61 6.19C53.7 35 58.867 34.327 64 34.304c5.13.023 10.3.694 15.127 2.033 11.526-7.813 16.59-6.19 16.59-6.19 3.287 8.317 1.22 14.46.593 15.98 3.872 4.23 6.215 9.617 6.215 16.21 0 23.194-14.127 28.3-27.574 29.796 2.167 1.874 4.097 5.55 4.097 11.183 0 8.08-.07 14.583-.07 16.572 0 1.607 1.088 3.49 4.148 2.897 23.98-7.994 41.263-30.622 41.263-57.294C124.388 32.14 97.35 5.104 64 5.104z\"></path><path d=\"M26.484 91.806c-.133.3-.605.39-1.035.185-.44-.196-.685-.605-.543-.906.13-.31.603-.395 1.04-.188.44.197.69.61.537.91zm2.446 2.729c-.287.267-.85.143-1.232-.28-.396-.42-.47-.983-.177-1.254.298-.266.844-.14 1.24.28.394.426.472.984.17 1.255zM31.312 98.012c-.37.258-.976.017-1.35-.52-.37-.538-.37-1.183.01-1.44.373-.258.97-.025 1.35.507.368.545.368 1.19-.01 1.452zm3.261 3.361c-.33.365-1.036.267-1.552-.23-.527-.487-.674-1.18-.343-1.544.336-.366 1.045-.264 1.564.23.527.486.686 1.18.333 1.543zm4.5 1.951c-.147.473-.825.688-1.51.486-.683-.207-1.13-.76-.99-1.238.14-.477.823-.7 1.512-.485.683.206 1.13.756.988 1.237zm4.943.361c.017.498-.563.91-1.28.92-.723.017-1.308-.387-1.315-.877 0-.503.568-.91 1.29-.924.717-.013 1.306.387 1.306.88zm4.598-.782c.086.485-.413.984-1.126 1.117-.7.13-1.35-.172-1.44-.653-.086-.498.422-.997 1.122-1.126.714-.123 1.354.17 1.444.663zm0 0\"></path></g>\n    </svg>\n)\n\nexport { ReactIcon, TSIcon, GithubIcon }\n","import React from 'react'\nimport { Text, Page, Grid, Link, Spacer } from '@geist-ui/react'\nimport Content from './components/Content'\nimport SpreadsheetInfo from './components/SpreadsheetInfo'\nimport { GithubIcon, ReactIcon, TSIcon } from './components/icons';\nimport './App.css'\n\n\nconst App: React.FC = () => (\n    <Page id='page'>\n        <Page.Header center>\n            <Text h1 style={{ textAlign: 'center' }}>Google Sheets API Demo - v2</Text>\n        </Page.Header>\n        <Page.Content>\n            <SpreadsheetInfo />\n            <Spacer h={3} />\n            <Content />\n        </Page.Content>\n        <Page.Footer id='footer'>\n            <Footer />\n        </Page.Footer>\n    </Page >\n)\n\nconst Footer = () => (\n    <Grid.Container gap={1} >\n        <Grid xs={24} justify='center'>\n            <Text small>Made by <Link href='https://github.com/joshuanianji' underline color>Joshua Ji</Link></Text>\n        </Grid>\n        <Grid xs={24} justify='center'>\n            <Text small style={{ textAlign: 'center' }}>Created with</Text>\n            <Spacer w={0.33} />\n            <ReactIcon size={20} />\n            <Text small style={{ margin: '0px 8px' }}>+</Text>\n            <TSIcon size={20} />\n        </Grid>\n        <Grid xs={24} justify='center'>\n            <Link href='https://github.com/e3c-summer-worker/google-sheets/tree/main/demo' color block>\n                <GithubIcon size={20} />\n            </Link>\n        </Grid>\n    </Grid.Container>\n)\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GeistProvider, CssBaseline } from '@geist-ui/react'\n\nReactDOM.render(\n    <React.StrictMode>\n        <GeistProvider>\n            <CssBaseline />\n            <App />\n        </GeistProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}